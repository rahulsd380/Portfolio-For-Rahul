.container {
  display: grid;
  height: 100vh;
  place-items: center;
  overflow: hidden;
  --circleDiameter: 440px;
  --planets: calc(var(--circleDiameter) / 8);
}

.hero-circle {
  position: relative;
  width: var(--circleDiameter);
  height: var(--circleDiameter);
}

/* Default size for larger screens */
.inner-img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  border-radius: 10px;
  width: 250px; /* Default width */
  height: 250px; /* Default height */
}

/* Adjust size for mobile devices */
@media (max-width: 640px) {
  /* Tailwind's mobile breakpoint */
  .inner-img {
    width: 150px; /* Smaller width for mobile */
    height: 150px; /* Smaller height for mobile */
  }
}

/* Adjust size for medium devices */
@media (min-width: 640px) and (max-width: 768px) {
  /* Tailwind's md breakpoint */
  .inner-img {
    width: 200px; /* Medium size */
    height: 200px; /* Medium size */
  }
}

.hero-rotate {
  position: relative;
  top: -7px;
  left: -7px;
  width: 100%;
  height: 100%;
  border: 1px solid #19284e;
  border-radius: 100%;
  animation: rotate 60s linear infinite;
}

.planet {
  position: absolute;
  width: var(--planets);
  aspect-ratio: 1;
  animation: maintain 60s linear infinite;
}

.planet:nth-child(1) {
  --angle: 0deg;
}

.planet:nth-child(2) {
  --angle: 45deg;
}

.planet:nth-child(3) {
  --angle: 90deg;
}

.planet:nth-child(4) {
  --angle: 135deg;
}

.planet:nth-child(5) {
  --angle: 180deg;
}

.planet:nth-child(6) {
  --angle: 225deg;
}

.planet:nth-child(7) {
  --angle: 270deg;
}

.planet:nth-child(8) {
  --angle: 315deg;
}

.planet > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  animation: scale 1s linear infinite alternate;
}

@keyframes rotate {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes maintain {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(-360deg);
  }
}

@keyframes scale {
  0% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}

.planet {
  --radius: calc(var(--circleDiameter) / 2);
  --x: calc(var(--radius) * cos(var(--angle)));
  --y: calc(var(--radius) * sin(var(--angle)));
  top: calc(50% + var(--y) - var(--planets) / 2);
  left: calc(50% + var(--x) - var(--planets) / 2);
}
